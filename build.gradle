  
plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

def projectName = 'Mediscreen'

subprojects {

    group = 'io.reflectoring.reviewapp'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    repositories {
        jcenter()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.9.RELEASE")
        }
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
	
	// CUSTOM DOCKER TASKS
	/*
	task buildDocker (type: Exec) {
		dependsOn "bootJar" 
		group = "Docker"
		description = "Build the docker image"
		commandLine "docker", "build", "--build-arg", "JAR_FILE=build/libs/*.jar", "-t", "tourguide/" + project.name.toLowerCase(), "."
	}

	task cleanDocker (type: Exec) {
		group = "Docker"
		ignoreExitValue = "true"
		description = "Delete the docker container"
		commandLine "docker", "rmi", "-f", "tourguide/" + project.name.toLowerCase()
	}
	*/
}

task runDocker (type: Exec) {
	group = "Docker"
	description = "Start all project micro services"
	commandLine "docker" ,"compose", "-p", "mediscreen", "-f", "docker-compose.yml", "up", "-d"
}

task stopDocker (type: Exec) {
	group = "Docker"
	description = "Stop all project micro services"
	commandLine "docker" ,"compose", "-p", "mediscreen", "-f", "docker-compose.yml", "down"
}

/*
task prepareTest (type: Exec) {
	dependsOn ':TourGuideGpsUtils:buildDocker', ':TourGuideTripPricer:buildDocker', ':TourGuideRewardCentral:buildDocker'
	group = "Verification"
	description = "Prepare Docker microservices env to execute TourGuide tests"
	commandLine "docker" ,"compose", "-p", projectName + "Test", "-f", "docker-compose-test.yml", "up", "-d"
}

task cleanTest (type: Exec) {
	finalizedBy ':TourGuideGpsUtils:cleanDocker', ':TourGuideTripPricer:cleanDocker', ':TourGuideRewardCentral:cleanDocker'
	group = "Verification"
	description = "Clean Docker microservices env"
	commandLine "docker" ,"compose", "-p", projectName + "Test", "-f", "docker-compose-test.yml", "down"
}

task runDocker (type: Exec){
	dependsOn ':TourGuideGpsUtils:buildDocker', ':TourGuideTripPricer:buildDocker', ':TourGuideRewardCentral:buildDocker', ':TourGuide:buildDocker'
	group = "Docker"
	commandLine "docker" ,"compose", "-p", projectName, "up", "-d"
}

task stopDocker (type: Exec) {
	finalizedBy ':TourGuideGpsUtils:cleanDocker', ':TourGuideTripPricer:cleanDocker', ':TourGuideRewardCentral:cleanDocker', ':TourGuide:cleanDocker'
	group = "Docker"
	description = "Stop the docker container"
	ignoreExitValue = "true"
	commandLine "docker", "compose", "-p", projectName, "down"
}
*/